<?xml version="1.0" encoding="UTF-8"?>

<!-- ********************************************************************** -->
<!-- Copyright (c) 2004-2005 Broadsoft, Inc.  All rights reserved.          -->
<!-- ********************************************************************** -->
<!-- O C I   X M L   S C H E M A  :  S E R V I C E  P A R T                 -->
<!--                                                                        -->
<!-- I N S T A N T   C O N F E R E N C I N G  S E R V I C E                 -->
<!--                                                                        -->
<!-- This file defines the XML Schema for the BroadSoft Application Server  -->
<!-- Open Client Interface (OCI).                                           -->
<!-- ********************************************************************** -->

<xs:schema xmlns:xs             = "http://www.w3.org/2001/XMLSchema"
           xmlns:core           = "C"
           xmlns                = ""
           attributeFormDefault = "qualified"
           elementFormDefault   = "qualified">
  
  <xs:import namespace      = "C"
             schemaLocation = "../OCISchemaBASE.xsd"/>
  
  <xs:include schemaLocation="../OCISchemaDataTypes.xsd"/>
  <xs:include schemaLocation="../OCISchemaSearchCriteria.xsd"/>
  
  <!-- ********************************************************************************** -->
  <!-- I N S T A N T   C O N F E R E N C I N G                                            -->
  <!-- R E Q U E S T S  A N D  R E S P O N S E S                                          -->
  <!-- ********************************************************************************** -->
  <!--
  Requests and responses are listed here in alphabetical order.
  The non-primitive attributes inside the commands are defined in another
  section of the schema.

  Requests in this schema file:
    GroupInstantConferencingAddInstanceRequest14    
    GroupInstantConferencingDeleteInstanceRequest    
    GroupInstantConferencingGetAvailableUserListRequest    
    GroupInstantConferencingGetInstanceListRequest    
    GroupInstantConferencingGetInstanceRequest17    
    GroupInstantConferencingGetRequest    
    GroupInstantConferencingModifyActiveInstanceListRequest    
    GroupInstantConferencingModifyInstanceRequest16    
    GroupInstantConferencingModifyRequest    
    ServiceProviderInstantConferencingGetRequest    
    ServiceProviderInstantConferencingModifyRequest    
    SystemInstantConferencingAddDeviceRequest14    
    SystemInstantConferencingDeleteDeviceRequest    
    SystemInstantConferencingGetDeviceListRequest14    
    SystemInstantConferencingGetDeviceRequest14    
    SystemInstantConferencingGetHoldPolicyRequest    
    SystemInstantConferencingGetRequest    
    SystemInstantConferencingModifyDeviceRequest14    
    SystemInstantConferencingModifyHoldPolicyRequest    
    SystemInstantConferencingModifyRequest    
    SystemInstantConferencingResetUserPasswordsRequest    
    SystemInstantConferencingResynchronizeDeviceRequest    
    UserInstantConferencingAddConferenceDocumentRequest    
    UserInstantConferencingAddConferenceRequest    
    UserInstantConferencingAddQuickConferenceRequest    
    UserInstantConferencingControlCallRequest    
    UserInstantConferencingControlStandAloneCallRequest    
    UserInstantConferencingDeleteConferenceDocumentListRequest    
    UserInstantConferencingDeleteConferenceListRequest    
    UserInstantConferencingDeleteConferenceRecordingListRequest    
    UserInstantConferencingEndPresentationRequest    
    UserInstantConferencingGetAvailableBridgeDelegatesListRequest    
    UserInstantConferencingGetAvailableConferenceOwnerListRequest    
    UserInstantConferencingGetBridgeDelegatesListRequest    
    UserInstantConferencingGetConferenceBridgeReportRequest    
    UserInstantConferencingGetConferenceCallRequest    
    UserInstantConferencingGetConferenceDocumentListRequest    
    UserInstantConferencingGetConferenceRecordingListRequest    
    UserInstantConferencingGetConferenceRecordingRequest14Sp9    
    UserInstantConferencingGetConferenceRequest14Sp6    
    UserInstantConferencingGetCurrentConferenceListRequest    
    UserInstantConferencingGetExpiredConferenceListRequest    
    UserInstantConferencingGetFutureConferenceListRequest    
    UserInstantConferencingGetInstanceListRequest    
    UserInstantConferencingGetStandAloneConferenceCallRequest    
    UserInstantConferencingGetStandAloneConferenceDocumentListRequest14    
    UserInstantConferencingGetStandAloneConferenceRecordingRequest    
    UserInstantConferencingGetStandAloneConferenceRequest14Sp6    
    UserInstantConferencingGetStandAloneSlideShowContentRequest    
    UserInstantConferencingLoginStandAloneRequest    
    UserInstantConferencingModifyBridgeDelegatesRequest    
    UserInstantConferencingModifyConferencePresentationPasswordRequest    
    UserInstantConferencingModifyConferenceRecordingSlideShowPasswordRequest    
    UserInstantConferencingModifyConferenceRequest14    
    UserInstantConferencingPlayRecordingToPhoneRequest    
    UserInstantConferencingPlayStandAloneRecordingToPhoneRequest    
    UserInstantConferencingSetPresentationSlideNameRequest    
    UserInstantConferencingSetPresentationSlideNumberRequest    
    UserInstantConferencingStartPresentationRequest    
    
  --> 
  
  <xs:complexType name="GroupInstantConferencingAddInstanceRequest14">
    <xs:annotation>
      <xs:documentation>
        Add a Instant Conferencing instance to a group.
        The domain is required in the serviceUserId.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="serviceProviderId" type="ServiceProviderId"/>
          <xs:element name="groupId" type="GroupId"/>
          <xs:element name="serviceUserId" type="UserId"/>
          <xs:element name="serviceInstanceProfile" type="ServiceInstanceAddProfile"/>
          <xs:element name="conferenceBridgeLinePort" type="AccessDeviceEndpointLinePort"/>
          <xs:element name="allocatedPorts" type="InstantConferencingAllocatedPorts"/>
          <xs:element name="serviceProfileAppliedOnOutcall" type="InstantConferencingOutcallProfile"/>
          <xs:element name="allowOutdialInInvitation" type="xs:boolean"/>
          <xs:element name="allowDocumentDownload" type="xs:boolean"/>
          <xs:element name="bridgeAdministratorUserId" type="UserId" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="networkClassOfService" type="NetworkClassOfServiceName" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="GroupInstantConferencingDeleteInstanceRequest">
    <xs:annotation>
      <xs:documentation>
        Delete a Instant Conferencing instance from a group.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="serviceUserId" type="UserId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="GroupInstantConferencingGetAvailableUserListRequest">
    <xs:annotation>
      <xs:documentation>
        Get a list of users that can be assigned to a Instant Conferencing group.
        Searching for users by group only makes sense when the Instant Conferencing is part of an Enterprise.
        The response is either GroupInstantConferencingGetAvailableUserListResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="serviceProviderId" type="ServiceProviderId"/>
          <xs:element name="groupId" type="GroupId"/>
          <xs:element name="responseSizeLimit" type="ResponseSizeLimit" minOccurs="0"/>
          <xs:element name="searchCriteriaUserLastName" type="SearchCriteriaUserLastName" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="searchCriteriaUserFirstName" type="SearchCriteriaUserFirstName" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="searchCriteriaExactUserDepartment" type="SearchCriteriaExactUserDepartment" minOccurs="0"/>
          <xs:element name="searchCriteriaExactUserGroup" type="SearchCriteriaExactUserGroup" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="GroupInstantConferencingGetAvailableUserListResponse">
    <xs:annotation>
      <xs:documentation>
        Response to the GroupInstantConferencingGetAvailableUserListRequest.
        Contains a table with column headings: "User Id", "Last Name", "First Name", "Hiragana Last Name", "Hiragana First Name".
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="userTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="GroupInstantConferencingGetInstanceListRequest">
    <xs:annotation>
      <xs:documentation>
        Get a list of Instant Conferencing instances within a group.
        The response is either GroupInstantConferencingGetInstanceListResponse or ErrorResponse.
        It is possible to get the instances within a specified department.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="serviceProviderId" type="ServiceProviderId"/>
          <xs:element name="groupId" type="GroupId"/>
          <xs:element name="groupDepartmentName" type="DepartmentName" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="GroupInstantConferencingGetInstanceListResponse">
    <xs:annotation>
      <xs:documentation>
        Response to the GroupInstantConferencingGetInstanceListRequest.
        Contains a table with column headings:
        "Service User Id", "Name", "Phone Number", "Extension", "Ports", "Department", "Is Active".
        The column values for "Is Active" can either be true, or false.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="instantConferencingTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="GroupInstantConferencingGetInstanceRequest17">
    <xs:annotation>
      <xs:documentation>
        Request to get all the information of an Instant Conferencing instance.
        The response is either GroupInstantConferencingGetInstanceResponse17 or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="serviceUserId" type="UserId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="GroupInstantConferencingGetInstanceResponse17">
    <xs:annotation>
      <xs:documentation>
        Response to GroupInstantConferencingGetInstanceRequest17.        Contains the service profile information and a table of assigned users.
        The table has column headings: "User Id", "Last Name", "First Name",
        "Hiragana Last Name", "Hiragana First Name".
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="serviceInstanceProfile" type="ServiceInstanceReadProfile17"/>
          <xs:element name="conferenceBridgeLinePort" type="AccessDeviceEndpointLinePort"/>
          <xs:element name="allocatedPorts" type="InstantConferencingAllocatedPorts"/>
          <xs:element name="serviceProfileAppliedOnOutcall" type="InstantConferencingOutcallProfile"/>
          <xs:element name="allowOutdialInInvitation" type="xs:boolean"/>
          <xs:element name="allowDocumentDownload" type="xs:boolean"/>
          <xs:element name="bridgeAdministratorUserTable" type="core:OCITable"/>
          <xs:element name="networkClassOfService" type="NetworkClassOfServiceName" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="GroupInstantConferencingGetRequest">
    <xs:annotation>
      <xs:documentation>
        Request the number of conference ports configured for a group.
        The response is either a GroupInstantConferencingGetResponse
        or an ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="serviceProviderId" type="ServiceProviderId"/>
          <xs:element name="groupId" type="GroupId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="GroupInstantConferencingGetResponse">
    <xs:annotation>
      <xs:documentation>
        Response to GroupInstantConferencingGetRequest.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="portsAvailableFromServiceProvider" type="UnboundedNonNegativeInt"/>
          <xs:element name="portsAllocatedToGroup" type="UnboundedNonNegativeInt"/>
          <xs:element name="portsConsumedByGroupBridges" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="GroupInstantConferencingModifyActiveInstanceListRequest">
    <xs:annotation>
      <xs:documentation>
        Request to set the active status of Instant Conferencing instances.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="serviceActivation" type="ServiceActivation" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="GroupInstantConferencingModifyInstanceRequest16">
    <xs:annotation>
      <xs:documentation>
        Request to modify a Instant Conferencing instance.
        The response is either SuccessResponse or
        ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="serviceUserId" type="UserId"/>
          <xs:element name="serviceInstanceProfile" type="ServiceInstanceModifyProfile" minOccurs="0"/>
          <xs:element name="conferenceBridgeLinePort" type="AccessDeviceEndpointLinePort" minOccurs="0"/>
          <xs:element name="allocatedPorts" type="InstantConferencingAllocatedPorts" minOccurs="0"/>
          <xs:element name="serviceProfileAppliedOnOutcall" type="InstantConferencingOutcallProfile" minOccurs="0"/>
          <xs:element name="allowOutdialInInvitation" type="xs:boolean" minOccurs="0"/>
          <xs:element name="allowDocumentDownload" type="xs:boolean" minOccurs="0"/>
          <xs:element name="bridgeAdministratorUserIdList" type="ReplacementUserIdList" nillable="true" minOccurs="0"/>
          <xs:element name="networkClassOfService" type="NetworkClassOfServiceName" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="GroupInstantConferencingModifyRequest">
    <xs:annotation>
      <xs:documentation>
        Modify the number of conference ports configured for a group.
        The response is either a SuccessResponse or an ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="serviceProviderId" type="ServiceProviderId"/>
          <xs:element name="groupId" type="GroupId"/>
          <xs:element name="portsAllocatedToGroup" type="UnboundedNonNegativeInt" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="ServiceProviderInstantConferencingGetRequest">
    <xs:annotation>
      <xs:documentation>
        Request the number of conference ports configured for a service provider.
        The response is either a ServiceProviderInstantConferencingGetResponse
        or an ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="serviceProviderId" type="ServiceProviderId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="ServiceProviderInstantConferencingGetResponse">
    <xs:annotation>
      <xs:documentation>
        Response to ServiceProviderInstantConferencingGetRequest.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="portsAllocatedToServiceProvider" type="UnboundedNonNegativeInt"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="ServiceProviderInstantConferencingModifyRequest">
    <xs:annotation>
      <xs:documentation>
        Modify the number of conference ports configured for a service provider.
        The response is either a SuccessResponse or an ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="serviceProviderId" type="ServiceProviderId"/>
          <xs:element name="portsAllocatedToServiceProvider" type="UnboundedNonNegativeInt" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingAddDeviceRequest14">
    <xs:annotation>
      <xs:documentation>
        Add an Instant Conferencing device to the system.
        The response is either a SuccessResponse or an ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="deviceName" type="AccessDeviceName"/>
          <xs:choice>
            <xs:element name="integrated" type="InstantConferencingIntegratedDevice"/>
            <xs:element name="nonIntegrated" type="InstantConferencingNonIntegratedDevice"/>
          </xs:choice>
          <xs:element name="clusterNetAddress" type="NetAddress" minOccurs="0"/>
          <xs:element name="signalingPort" type="Port1025" minOccurs="0"/>
          <xs:element name="description" type="InstantConferencingDeviceDescription" minOccurs="0"/>
          <xs:element name="transportProtocol" type="TransportProtocol"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingDeleteDeviceRequest">
    <xs:annotation>
      <xs:documentation>
        Request to delete an Instant Conferencing device from the system.
        The response is either a SuccessResponse or an ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="deviceName" type="AccessDeviceName"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingGetDeviceListRequest14">
    <xs:annotation>
      <xs:documentation>
        Request to get a list of Instant Conferencing devices defined in the system.
        The response is either a SystemInstantConferencingGetDeviceListResponse14 or an ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingGetDeviceListResponse14">
    <xs:annotation>
      <xs:documentation>
        Response to SystemInstantConferencingGetDeviceListRequest14. The table column headings are: "Device Name",
        "Device Type", "Integrated" and "Cluster Net Address".
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="instantConferencingDeviceTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingGetDeviceRequest14">
    <xs:annotation>
      <xs:documentation>
        Request to get an Instant Conferencing devices settings.
        The response is either a SystemInstantConferencingGetDeviceResponse14 or an ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="deviceName" type="AccessDeviceName"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingGetDeviceResponse14">
    <xs:annotation>
      <xs:documentation>
        Response to SystemInstantConferencingGetDeviceRequest14.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:choice>
            <xs:element name="integrated" type="InstantConferencingIntegratedDevice"/>
            <xs:element name="nonIntegrated" type="InstantConferencingNonIntegratedDevice"/>
          </xs:choice>
          <xs:element name="clusterNetAddress" type="NetAddress" minOccurs="0"/>
          <xs:element name="signalingPort" type="Port1025" minOccurs="0"/>
          <xs:element name="description" type="InstantConferencingDeviceDescription" minOccurs="0"/>
          <xs:element name="transportProtocol" type="TransportProtocol"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingGetHoldPolicyRequest">
    <xs:annotation>
      <xs:documentation>
        Request the system level data associated with Instant Conferencing hold functions.
        The response is either a SystemInstantConferencingGetHoldPolicyResponse or an
        ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingGetHoldPolicyResponse">
    <xs:annotation>
      <xs:documentation>
        Response to SystemInstantConferencingGetHoldPolicyRequest.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="deleteExpiredConferences" type="xs:boolean"/>
          <xs:element name="expiredConferenceHoldPeriodDays" type="InstantConferencingExpiredConferenceHoldPeriodDays"/>
          <xs:element name="deleteRecordedConferences" type="xs:boolean"/>
          <xs:element name="recordedConferenceHoldPeriodDays" type="InstantConferencingRecordedConferenceHoldPeriodDays"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingGetRequest">
    <xs:annotation>
      <xs:documentation>
        Request the system level data associated with Instant Conferencing.
        The response is either a SystemInstantConferencingGetResponse or an
        ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingGetResponse">
    <xs:annotation>
      <xs:documentation>
        Response to SystemInstantConferencingGetRequest.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="defaultDropAllParticipantsWhenLeaderLeaves" type="xs:boolean"/>
          <xs:element name="defaultAllowDialOutInInvitation" type="xs:boolean"/>
          <xs:element name="defaultFromAddress" type="EmailAddress"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingModifyDeviceRequest14">
    <xs:annotation>
      <xs:documentation>
        Request to modify an Instant Conferencing device in the system.
        The response is either a SuccessResponse or an ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="deviceName" type="AccessDeviceName"/>
          <xs:element name="clusterNetAddress" type="NetAddress" minOccurs="0"/>
          <xs:element name="signalingPort" type="Port1025" minOccurs="0"/>
          <xs:element name="description" type="InstantConferencingDeviceDescription" nillable="true" minOccurs="0"/>
          <xs:element name="integrated" type="InstantConferencingIntegratedDeviceModify" minOccurs="0"/>
          <xs:element name="transportProtocol" type="TransportProtocol" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingModifyHoldPolicyRequest">
    <xs:annotation>
      <xs:documentation>
        Modify the system level data associated with Instant Conferencing hold functions.
        The response is either a SuccessResponse or an ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="deleteExpiredConferences" type="xs:boolean" minOccurs="0"/>
          <xs:element name="expiredConferenceHoldPeriodDays" type="InstantConferencingExpiredConferenceHoldPeriodDays" minOccurs="0"/>
          <xs:element name="deleteRecordedConferences" type="xs:boolean" minOccurs="0"/>
          <xs:element name="recordedConferenceHoldPeriodDays" type="InstantConferencingRecordedConferenceHoldPeriodDays" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingModifyRequest">
    <xs:annotation>
      <xs:documentation>
        Modify the system level data associated with Instant Conferencing.
        The response is either a SuccessResponse or an ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="defaultDropAllParticipantsWhenLeaderLeaves" type="xs:boolean" minOccurs="0"/>
          <xs:element name="defaultAllowDialOutInInvitation" type="xs:boolean" minOccurs="0"/>
          <xs:element name="defaultFromAddress" type="EmailAddress" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingResetUserPasswordsRequest">
    <xs:annotation>
      <xs:documentation>
        Regenerate new credentials for the conference bridges defined on the
        specified device.
        The response is either a SuccessResponse or an ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="deviceName" type="AccessDeviceName"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="SystemInstantConferencingResynchronizeDeviceRequest">
    <xs:annotation>
      <xs:documentation>
        This command is used to resynchronize all the conference bridges and
        administrators defined on the specified device, pushing data from the
        Application Server to the Conferencing Server.
        The response is either a SuccessResponse or an ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="deviceName" type="AccessDeviceName"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingAddConferenceDocumentRequest">
    <xs:annotation>
      <xs:documentation>
        Add a conference document.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey"/>
          <xs:element name="documentFile" type="LabeledFileResource"/>
          <xs:element name="encryptionPassword" type="Password" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingAddConferenceRequest">
    <xs:annotation>
      <xs:documentation>
        Add a conference.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="bridgeServiceUserId" type="UserId"/>
          <xs:element name="conferenceOwnerUserId" type="UserId"/>
          <xs:element name="title" type="InstantConferencingTitle"/>
          <xs:element name="leaderRequired" type="xs:boolean"/>
          <xs:element name="leaderReleaseDropsParticipants" type="xs:boolean"/>
          <xs:element name="announceCallers" type="xs:boolean"/>
          <xs:element name="conferenceType" type="InstantConferencingConferenceType"/>
          <xs:element name="conferenceSchedule" type="InstantConferencingSchedule"/>
          <xs:element name="billingCode" type="InstantConferencingBillingCode" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingAddQuickConferenceRequest">
    <xs:annotation>
      <xs:documentation>
        Add a conference quickly.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="bridgeServiceUserId" type="UserId"/>
          <xs:element name="leaderPhoneNumber" type="OutgoingDNorSIPURI"/>
          <xs:element name="leaderName" type="InstantConferencingParticipantName" minOccurs="0"/>
          <xs:element name="participantPhoneNumber" type="OutgoingDNorSIPURI"/>
          <xs:element name="participantName" type="InstantConferencingParticipantName" minOccurs="0"/>
          <xs:element name="billingCode" type="InstantConferencingBillingCode" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingControlCallRequest">
    <xs:annotation>
      <xs:documentation>
        Control a conference call.
        The legId is given in the UserInstantConferencingGetConferenceCallResponse.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey"/>
          <xs:element name="conferenceCallId" type="InstantConferencingCallId"/>
          <xs:element name="action" type="InstantConferencingCallControlAction"/>
          <xs:element name="phoneNumber" type="OutgoingDNorSIPURI" minOccurs="0"/>
          <xs:element name="userName" type="InstantConferencingParticipantName" minOccurs="0"/>
          <xs:element name="legId" type="InstantConferencingLegId" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingControlStandAloneCallRequest">
    <xs:annotation>
      <xs:documentation>
        Control a conference call from a stand alone user.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="conferenceOwnerUserId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey"/>
          <xs:element name="conferenceCallId" type="InstantConferencingCallId"/>
          <xs:element name="action" type="InstantConferencingStandAloneCallControlAction"/>
          <xs:element name="phoneNumber" type="OutgoingDNorSIPURI"/>
          <xs:element name="userName" type="InstantConferencingParticipantName" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingDeleteConferenceDocumentListRequest">
    <xs:annotation>
      <xs:documentation>
        Request to delete one or more conference documents.
        The documentId is obtained from the UserInstantConferencingGetConferenceDocumentListResponse.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey"/>
          <xs:element name="conferenceCallId" type="InstantConferencingCallId"/>
          <xs:element name="documentId" type="InstantConferencingDocumentId" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingDeleteConferenceListRequest">
    <xs:annotation>
      <xs:documentation>
        Request to delete one or more conferences which are owned by the user or the user's delegators.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingDeleteConferenceRecordingListRequest">
    <xs:annotation>
      <xs:documentation>
        Request to delete one or more conference recordings owned by the user or the user's delegators.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="recordingKey" type="InstantConferencingRecordingKey" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingEndPresentationRequest">
    <xs:annotation>
      <xs:documentation>
        End the presentation of a conference document.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="bridgeServiceUserId" type="UserId"/>
          <xs:element name="documentId" type="InstantConferencingDocumentId"/>
          <xs:element name="accessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="slideName" type="InstantConferencingSlideName"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetAvailableBridgeDelegatesListRequest">
    <xs:annotation>
      <xs:documentation>
        Get a list of available bridge administrators who could be delegates of a user.
        The response is either UserInstantConferencingGetAvailableBridgeDelegatesListResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="bridgeServiceUserId" type="UserId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetAvailableBridgeDelegatesListResponse">
    <xs:annotation>
      <xs:documentation>
        Response to UserInstantConferencingGetAvailableBridgeDelegatesListRequest.
        Contains a table of available bridge administrators.
        The table has column headings:
        "User Id", "Last Name", "First Name", "Hiragana Last Name", "Hiragana First Name".
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="userTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetAvailableConferenceOwnerListRequest">
    <xs:annotation>
      <xs:documentation>
        Get the list of users who could are eligible to be owner of a conference.
        Returns a list of instant conferencing bridges and the possible conference owners for
        the bridges owned by the user or the user is delegated to.
        The response is either UserInstantConferencingGetAvailableConferenceOwnerListResponse or ErrorResponse.
        It is possible to get the list of possible conference owners for one conferencing bridge.
        If the bridgeServiceUserId is specified, only the possible conference owners for that bridge
        are returned, otherwise the possible conference owners of all bridges are returned.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="bridgeServiceUserId" type="UserId" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetAvailableConferenceOwnerListResponse">
    <xs:annotation>
      <xs:documentation>
        Response to the UserInstantConferencingGetAvailableConferenceOwnerListRequest.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="bridge" type="InstantConferencingBridgeOwnerList" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetBridgeDelegatesListRequest">
    <xs:annotation>
      <xs:documentation>
        Get a list of delegates of a bridge administrator.
        The response is either UserInstantConferencingGetBridgeDelegatesListResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="bridgeServiceUserId" type="UserId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetBridgeDelegatesListResponse">
    <xs:annotation>
      <xs:documentation>
        Response to UserInstantConferencingGetBridgeDelegatesListRequest.
        Contains a table of assigned delegates.
        The table has column headings:
        "User Id", "Last Name", "First Name", "Hiragana Last Name", "Hiragana First Name".
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="userTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetConferenceBridgeReportRequest">
    <xs:annotation>
      <xs:documentation>
        Get conference details reports.
        The response is either UserInstantConferencingGetConferenceBridgeReportResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="bridgeServiceUserId" type="UserId"/>
          <xs:element name="reportStartDate" type="xs:date"/>
          <xs:element name="reportEndDate" type="xs:date"/>
          <xs:element name="billingCode" type="InstantConferencingBillingCode" minOccurs="0"/>
          <xs:element name="reportDeliveryEmailAddress" type="EmailAddress" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetConferenceBridgeReportResponse">
    <xs:annotation>
      <xs:documentation>
        Response to UserInstantConferencingGetConferenceBridgeReportRequest.
        Contains a table of report.
        The table has column headings: "Bridge Name", "Call Date", "Call Start Time",
        "Time Zone", "Call Owner", "Phone Number", "Direction", "Leg Start", "Duration",
        "Leg Number", "Access Code", "Billing Code" and "Call Id".
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="conferenceReportTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetConferenceCallRequest">
    <xs:annotation>
      <xs:documentation>
        Get the information of a conference call owned or delegated by the user.
        The response is either UserInstantConferencingGetConferenceCallResponse
        or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey"/>
          <xs:element name="conferenceCallId" type="InstantConferencingCallId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetConferenceCallResponse">
    <xs:annotation>
      <xs:documentation>
        Response to UserInstantConferencingGetConferenceCallRequest.
        Contains the information of a conference call.
        The conferenceLegTable contains a table with column headings:
        "Is Leader", "Phone Number", "User Name", "Status" and "Leg Id".
        The "User Name" is whatever was specified in the UserInstantConferencingControlCallRequest.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="isBridgeActive" type="xs:boolean"/>
          <xs:element name="title" type="InstantConferencingTitle"/>
          <xs:element name="isLocked" type="xs:boolean"/>
          <xs:element name="isRecording" type="xs:boolean"/>
          <xs:element name="isExpired" type="xs:boolean"/>
          <xs:element name="isPaused" type="xs:boolean"/>
          <xs:element name="conferenceLegTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetConferenceDocumentListRequest">
    <xs:annotation>
      <xs:documentation>
        Get the list of conference documents.
        The response is either UserInstantConferencingGetConferenceDocumentListResponse
        or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetConferenceDocumentListResponse">
    <xs:annotation>
      <xs:documentation>
        Response to UserInstantConferencingGetConferenceDocumentListRequest.
        The documentTable has column headings:
        "File Description", "Status", "Error Message", "Slide Name", "Slide List".
        The "File Description" column is the description from the LabeledFileResource
        when the document was added.
        The "Slide List" column is a string with all the possible slide numbers, it looks
        like "1,2,3,4,5" if the slide show has 5 pages.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="conferenceCallId" type="InstantConferencingCallId"/>
          <xs:element name="documentId" type="InstantConferencingDocumentId"/>
          <xs:element name="isExpired" type="xs:boolean"/>
          <xs:element name="participantAccessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="leaderAccessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="conferenceServerFQDN" type="DomainName"/>
          <xs:element name="presentationPassword" type="InstantConferencingPresentationPassword" minOccurs="0"/>
          <xs:element name="presentationPasswordHex" type="InstantConferencingPresentationPasswordHex" minOccurs="0"/>
          <xs:element name="documentTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetConferenceRecordingListRequest">
    <xs:annotation>
      <xs:documentation>
        Get the list of recordings of a conference owned or delegated by the user.
        The response is either UserInstantConferencingGetConferenceRecordingListResponse
        or ErrorResponse.
        If conferenceKey is not in the request, the recordings for all the conferences of the user will be returned.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetConferenceRecordingListResponse">
    <xs:annotation>
      <xs:documentation>
        Response to the UserInstantConferencingGetConferenceRecordingListRequest.
        Contains a table with column headings:
        "Bridge Service User Id", "Bridge Name", "Recording Id",
        "Owner User Id", "Owner Last Name", "Owner First Name", "Owner Hiragana Last Name", "Owner Hiragana First Name",
        "Title", "Start Date", "Start Time", and "Duration".
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="conferenceRecordingTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetConferenceRecordingRequest14Sp9">
    <xs:annotation>
      <xs:documentation>
        Get the information of a conference recording owned or delegated by the user.
        The response is either UserInstantConferencingGetConferenceRecordingResponse14Sp9
        or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="recordingKey" type="InstantConferencingRecordingKey"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetConferenceRecordingResponse14Sp9">
    <xs:annotation>
      <xs:documentation>
        Response to UserInstantConferencingGetConferenceRecordingRequest14Sp9.
        Contains the information of a conference recording.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="recordingCallId" type="InstantConferencingRecordingCallId"/>
          <xs:element name="conferenceOwnerUserId" type="UserId"/>
          <xs:element name="conferenceOwnerDisplayNames" type="UserDisplayNames"/>
          <xs:element name="title" type="InstantConferencingTitle"/>
          <xs:element name="documentId" type="InstantConferencingDocumentId"/>
          <xs:element name="startDateTime" type="xs:dateTime"/>
          <xs:element name="duration" type="xs:duration"/>
          <xs:element name="isBridgeActive" type="xs:boolean"/>
          <xs:element name="bridgeName" type="ServiceInstanceProfileName"/>
          <xs:element name="bridgePhoneNumber" type="DN" minOccurs="0"/>
          <xs:element name="accessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="hasSlideShow" type="xs:boolean"/>
          <xs:element name="slideShowPassword" type="InstantConferencingSlideShowPassword" minOccurs="0"/>
          <xs:element name="slideShowPasswordHex" type="InstantConferencingSlideShowPasswordHex" minOccurs="0"/>
          <xs:element name="conferenceServerFQDN" type="DomainName"/>
          <xs:element name="allowOutdialInInvitation" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetConferenceRequest14Sp6">
    <xs:annotation>
      <xs:documentation>
        Get the information of a conference owned or delegated by the user.
        The response is either UserInstantConferencingGetConferenceResponse14Sp6
        or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetConferenceResponse14Sp6">
    <xs:annotation>
      <xs:documentation>
        Response to UserInstantConferencingGetConferenceRequest14Sp6.
        Contains the information of a conference.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="conferenceCallId" type="InstantConferencingCallId"/>
          <xs:element name="conferenceOwnerUserId" type="UserId"/>
          <xs:element name="conferenceOwnerDisplayNames" type="UserDisplayNames"/>
          <xs:element name="title" type="InstantConferencingTitle"/>
          <xs:element name="leaderRequired" type="xs:boolean"/>
          <xs:element name="leaderReleaseDropsParticipants" type="xs:boolean"/>
          <xs:element name="announceCallers" type="xs:boolean"/>
          <xs:element name="conferenceType" type="InstantConferencingConferenceType"/>
          <xs:element name="conferenceSchedule" type="InstantConferencingSchedule"/>
          <xs:element name="billingCode" type="InstantConferencingBillingCode" minOccurs="0"/>
          <xs:element name="leaderAccessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="participantAccessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="isCallActive" type="xs:boolean"/>
          <xs:element name="isExpired" type="xs:boolean"/>
          <xs:element name="isFuture" type="xs:boolean"/>
          <xs:element name="hasPresentation" type="xs:boolean"/>
          <xs:element name="presentationPassword" type="InstantConferencingPresentationPassword" minOccurs="0"/>
          <xs:element name="allowOutdialInInvitation" type="xs:boolean"/>
          <xs:element name="bridgePhoneNumber" type="DN" minOccurs="0"/>
          <xs:element name="bridgeCountryCode" type="CountryCode" minOccurs="0"/>
          <xs:element name="bridgeNationalPrefix" type="NationalPrefix" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetCurrentConferenceListRequest">
    <xs:annotation>
      <xs:documentation>
        Get the list of current conferences owned by the user or delegated by the user's delegators.
        The response is either UserInstantConferencingGetCurrentConferenceListResponse
        or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetCurrentConferenceListResponse">
    <xs:annotation>
      <xs:documentation>
        Response to the UserInstantConferencingGetCurrentConferenceListRequest.
        Contains a table with column headings:
        "Bridge Service User Id", "Bridge Name", "Conference Id",
        "Owner User Id", "Owner Last Name", "Owner First Name", "Owner Hiragana Last Name", "Owner Hiragana First Name",
        "Title", "Type", "Start Time".
        owner = display name
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="conferenceTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetExpiredConferenceListRequest">
    <xs:annotation>
      <xs:documentation>
        Get the list of expired conferences owned by the user or the user's delegators.
        The response is either UserInstantConferencingGetExpiredConferenceListResponse
        or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetExpiredConferenceListResponse">
    <xs:annotation>
      <xs:documentation>
        Response to the UserInstantConferencingGetExpiredConferenceListRequest.
        Contains a table with column headings:
        "Bridge Service User Id", "Bridge Name", "Conference Id",
        "Owner User Id", "Owner Last Name", "Owner First Name", "Owner Hiragana Last Name", "Owner Hiragana First Name",
        "Title", "Type", "Expiry Date".
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="conferenceTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetFutureConferenceListRequest">
    <xs:annotation>
      <xs:documentation>
        Get the list of future conferences owned by the user or the user's delegators.
        The response is either UserInstantConferencingGetFutureConferenceListResponse
        or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetFutureConferenceListResponse">
    <xs:annotation>
      <xs:documentation>
        Response to the UserInstantConferencingGetFutureConferenceListRequest.
        Contains a table with column headings:
        "Bridge Service User Id", "Bridge Name", "Conference Id",
        "Owner User Id", "Owner Last Name", "Owner First Name", "Owner Hiragana Last Name", "Owner Hiragana First Name",
        "Title", "Type",  "Start Date", "Start Time".
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="conferenceTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetInstanceListRequest">
    <xs:annotation>
      <xs:documentation>
        Get a list of Instant Conferencing instances for which a user has administrator privilege.
        The response is either UserInstantConferencingGetInstanceListResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetInstanceListResponse">
    <xs:annotation>
      <xs:documentation>
        Response to the UserInstantConferencingGetInstanceListRequest.
        Contains a table with column headings:
        "Service User Id", "Name", "Phone Number", "Extension", "Ports", "Is Active", "Is Device Integrated".
        The column values for "Is Active" can either be true, or false.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="instantConferencingTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetStandAloneConferenceCallRequest">
    <xs:annotation>
      <xs:documentation>
        Get the information of a conference call owned or delegated by the user.
        The response is either UserInstantConferencingGetStandAloneConferenceCallResponse
        or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="conferenceOwnerUserId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey"/>
          <xs:element name="conferenceCallId" type="InstantConferencingCallId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetStandAloneConferenceCallResponse">
    <xs:annotation>
      <xs:documentation>
        Response to UserInstantConferencingGetStandAloneConferenceCallRequest.
        Contains the information of a conference call.
        The conferenceLegTable contains a table with column headings:
        "Is Leader", "Phone Number", "User Name", "Status" and "Leg Id".
        The "User Name" is whatever was specified in the UserInstantConferencingControlCallRequest.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="isBridgeActive" type="xs:boolean"/>
          <xs:element name="title" type="InstantConferencingTitle"/>
          <xs:element name="isLocked" type="xs:boolean"/>
          <xs:element name="isRecording" type="xs:boolean"/>
          <xs:element name="isExpired" type="xs:boolean"/>
          <xs:element name="isPaused" type="xs:boolean"/>
          <xs:element name="conferenceLegTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetStandAloneConferenceDocumentListRequest14">
    <xs:annotation>
      <xs:documentation>
        Get the list of conference documents.
        The response is either UserInstantConferencingGetStandAloneConferenceDocumentListResponse14
        or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="conferenceOwnerUserId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey"/>
          <xs:element name="isWebServerCollocated" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetStandAloneConferenceDocumentListResponse14">
    <xs:annotation>
      <xs:documentation>
        Response to UserInstantConferencingGetStandAloneConferenceDocumentListRequest14.
        The documentTable has column headings:
        "File Description", "Status", "Error Message", "Slide Name", "Slide List".
        The "File Description" column is the description from the LabeledFileResource
        when the document was added.
        The "Slide List" column is a string with all the possible slide numbers, it looks
        like "1,2,3,4,5" if the slide show has 5 pages.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="conferenceCallId" type="InstantConferencingCallId"/>
          <xs:element name="documentId" type="InstantConferencingDocumentId"/>
          <xs:element name="isExpired" type="xs:boolean"/>
          <xs:element name="participantAccessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="leaderAccessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="conferenceServerFQDN" type="DomainName"/>
          <xs:element name="presentationPassword" type="InstantConferencingPresentationPassword" minOccurs="0"/>
          <xs:element name="presentationPasswordHex" type="InstantConferencingPresentationPasswordHex" minOccurs="0"/>
          <xs:element name="documentTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetStandAloneConferenceRecordingRequest">
    <xs:annotation>
      <xs:documentation>
        Get the information of a conference recording..
        The response is either UserInstantConferencingGetStandAloneConferenceRecordingResponse
        or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="conferenceOwnerUserId" type="UserId"/>
          <xs:element name="recordingKey" type="InstantConferencingRecordingKey"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetStandAloneConferenceRecordingResponse">
    <xs:annotation>
      <xs:documentation>
        Response to UserInstantConferencingGetStandAloneConferenceRecordingRequest.
        Contains the information of a conference recording.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="recordingCallId" type="InstantConferencingRecordingCallId"/>
          <xs:element name="conferenceOwnerDisplayNames" type="UserDisplayNames"/>
          <xs:element name="title" type="InstantConferencingTitle"/>
          <xs:element name="documentId" type="InstantConferencingDocumentId"/>
          <xs:element name="startDateTime" type="xs:dateTime"/>
          <xs:element name="duration" type="xs:duration"/>
          <xs:element name="isBridgeActive" type="xs:boolean"/>
          <xs:element name="bridgeName" type="ServiceInstanceProfileName"/>
          <xs:element name="bridgePhoneNumber" type="DN" minOccurs="0"/>
          <xs:element name="accessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="hasSlideShow" type="xs:boolean"/>
          <xs:element name="slideShowPassword" type="InstantConferencingSlideShowPassword" minOccurs="0"/>
          <xs:element name="slideShowPasswordHex" type="InstantConferencingSlideShowPasswordHex" minOccurs="0"/>
          <xs:element name="conferenceServerFQDN" type="DomainName"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetStandAloneConferenceRequest14Sp6">
    <xs:annotation>
      <xs:documentation>
        Get the information of a conference owned or delegated by the user.
        The response is either UserInstantConferencingGetStandAloneConferenceResponse14Sp6
        or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="conferenceOwnerUserId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetStandAloneConferenceResponse14Sp6">
    <xs:annotation>
      <xs:documentation>
        Response to UserInstantConferencingGetStandAloneConferenceRequest14Sp6.
        Contains the information of a conference.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="conferenceCallId" type="InstantConferencingCallId"/>
          <xs:element name="conferenceOwnerDisplayNames" type="UserDisplayNames"/>
          <xs:element name="title" type="InstantConferencingTitle"/>
          <xs:element name="leaderRequired" type="xs:boolean"/>
          <xs:element name="leaderReleaseDropsParticipants" type="xs:boolean"/>
          <xs:element name="announceCallers" type="xs:boolean"/>
          <xs:element name="conferenceType" type="InstantConferencingConferenceType"/>
          <xs:element name="conferenceSchedule" type="InstantConferencingSchedule"/>
          <xs:element name="billingCode" type="InstantConferencingBillingCode" minOccurs="0"/>
          <xs:element name="leaderAccessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="participantAccessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="isCallActive" type="xs:boolean"/>
          <xs:element name="isExpired" type="xs:boolean"/>
          <xs:element name="isFuture" type="xs:boolean"/>
          <xs:element name="hasPresentation" type="xs:boolean"/>
          <xs:element name="presentationPassword" type="InstantConferencingPresentationPassword" minOccurs="0"/>
          <xs:element name="allowOutdialInInvitation" type="xs:boolean"/>
          <xs:element name="bridgePhoneNumber" type="DN" minOccurs="0"/>
          <xs:element name="bridgeCountryCode" type="CountryCode" minOccurs="0"/>
          <xs:element name="bridgeNationalPrefix" type="NationalPrefix" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetStandAloneSlideShowContentRequest">
    <xs:annotation>
      <xs:documentation>
        Get slide show content of a recorded conference.
        The response is either UserInstantConferencingGetStandAloneSlideShowContentResponse
        or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="bridgeServiceUserId" type="UserId"/>
          <xs:element name="conferenceOwnerUserId" type="UserId"/>
          <xs:element name="documentId" type="InstantConferencingDocumentId"/>
          <xs:element name="slideshowPasswordHex" type="InstantConferencingSlideShowPasswordHex" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingGetStandAloneSlideShowContentResponse">
    <xs:annotation>
      <xs:documentation>
        Response to the UserInstantConferencingGetStandAloneSlideShowContentRequest.
        Contains a table with column headings:
        "Image Source URL", "Slide End Time", "Slide Number" and "Slide Document Name".
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="audioURL" type="URL"/>
          <xs:element name="slideShowContentTable" type="core:OCITable"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingLoginStandAloneRequest">
    <xs:annotation>
      <xs:documentation>
        Handles stand alone login. Return a set of information for the user.
        The response is either UserInstantConferencingLoginStandAloneResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="bridgeServiceUserId" type="UserId"/>
          <xs:element name="conferenceOwnerUserId" type="UserId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingLoginStandAloneResponse">
    <xs:annotation>
      <xs:documentation>
        Response to UserInstantConferencingLoginStandAloneRequest.
        Contains the information of the conference owner.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIDataResponse">
        <xs:sequence>
          <xs:element name="locale" type="OCILocale"/>
          <xs:element name="encoding" type="Encoding"/>
          <xs:element name="timeZone" type="TimeZone"/>
          <xs:element name="timeZoneDisplayName" type="TimeZoneDisplayName"/>
          <xs:element name="phoneNumber" type="DN" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingModifyBridgeDelegatesRequest">
    <xs:annotation>
      <xs:documentation>
        Assign a bridge administrator to be a user's delegates.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="bridgeServiceUserId" type="UserId"/>
          <xs:element name="bridgeDelegatesUserIdList" type="ReplacementUserIdList" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingModifyConferencePresentationPasswordRequest">
    <xs:annotation>
      <xs:documentation>
        Modify the presentation password.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey"/>
          <xs:element name="presentationPassword" type="InstantConferencingPresentationPassword" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingModifyConferenceRecordingSlideShowPasswordRequest">
    <xs:annotation>
      <xs:documentation>
        Modify the conference recording slideshow password.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="recordingKey" type="InstantConferencingRecordingKey"/>
          <xs:element name="recordingCallId" type="InstantConferencingRecordingCallId"/>
          <xs:element name="slideShowPassword" type="InstantConferencingSlideShowPassword" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingModifyConferenceRequest14">
    <xs:annotation>
      <xs:documentation>
        Modify an existing conference.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="conferenceKey" type="InstantConferencingConferenceKey"/>
          <xs:element name="title" type="InstantConferencingTitle" minOccurs="0"/>
          <xs:element name="leaderRequired" type="xs:boolean" minOccurs="0"/>
          <xs:element name="leaderReleaseDropsParticipants" type="xs:boolean" minOccurs="0"/>
          <xs:element name="announceCallers" type="xs:boolean" minOccurs="0"/>
          <xs:element name="conferenceSchedule" type="InstantConferencingSchedule" minOccurs="0"/>
          <xs:element name="billingCode" type="InstantConferencingBillingCode" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingPlayRecordingToPhoneRequest">
    <xs:annotation>
      <xs:documentation>
        Play a recording to a specified phone.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="recordingKey" type="InstantConferencingRecordingKey"/>
          <xs:element name="playBackPhoneNumber" type="OutgoingDNorSIPURI"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingPlayStandAloneRecordingToPhoneRequest">
    <xs:annotation>
      <xs:documentation>
        Play a recording to a specified phone.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="conferenceOwnerUserId" type="UserId"/>
          <xs:element name="recordingKey" type="InstantConferencingRecordingKey"/>
          <xs:element name="playBackPhoneNumber" type="OutgoingDNorSIPURI"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingSetPresentationSlideNameRequest">
    <xs:annotation>
      <xs:documentation>
        Set presentation slide name of a conference document.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="bridgeServiceUserId" type="UserId"/>
          <xs:element name="documentId" type="InstantConferencingDocumentId"/>
          <xs:element name="accessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="previousSlideName" type="InstantConferencingSlideName"/>
          <xs:element name="newSlideName" type="InstantConferencingSlideName"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingSetPresentationSlideNumberRequest">
    <xs:annotation>
      <xs:documentation>
        Set presentation slide number of a conference document.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="bridgeServiceUserId" type="UserId"/>
          <xs:element name="documentId" type="InstantConferencingDocumentId"/>
          <xs:element name="accessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="slideName" type="InstantConferencingSlideName"/>
          <xs:element name="slideNumber" type="InstantConferencingSlideNumber"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="UserInstantConferencingStartPresentationRequest">
    <xs:annotation>
      <xs:documentation>
        Start presentation of a conference document.
        The response is either SuccessResponse or ErrorResponse.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:OCIRequest">
        <xs:sequence>
          <xs:element name="userId" type="UserId"/>
          <xs:element name="bridgeServiceUserId" type="UserId"/>
          <xs:element name="accessCode" type="InstantConferencingAccessCode"/>
          <xs:element name="documentId" type="InstantConferencingDocumentId"/>
          <xs:element name="slideName" type="InstantConferencingSlideName"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:simpleType name="InstantConferencingAccessCode">
    <xs:annotation>
      <xs:documentation>
        Conference access code for a conference.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
      <xs:maxLength value="28"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:complexType name="InstantConferencingAllocatedPorts">
    <xs:annotation>
      <xs:documentation>
      Number of allocated ports.
        Unbounded Quantity. Can either be unlimited or an int quantity.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="unlimited" type="xs:boolean" fixed="true"/>
      <xs:element name="quantity">
        <xs:simpleType>
          <xs:restriction base="xs:int">
            <xs:minInclusive value="2"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:choice>
  </xs:complexType>    
    
  <xs:simpleType name="InstantConferencingBillingCode">
    <xs:annotation>
      <xs:documentation>
        Instant conferencing project billing code.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
      <xs:maxLength value="50"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:complexType name="InstantConferencingBridgeOwnerList">
    <xs:annotation>
      <xs:documentation>
        The bridge Id and the administrators/delegator of the bridge.
        The ownerTable has column headings: "User Id", "Last Name", "First Name", "Hiragana Last Name", "Hiragana First Name".
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="bridgeServiceUserId" type="UserId"/>
      <xs:element name="bridgeName" type="ServiceInstanceProfileName"/>
      <xs:element name="userTable" type="core:OCITable"/>
    </xs:sequence>
  </xs:complexType>    
    
  <xs:simpleType name="InstantConferencingCallControlAction">
    <xs:annotation>
      <xs:documentation>
        The conference call control action.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Join"/>
      <xs:enumeration value="Start Recording"/>
      <xs:enumeration value="Stop Recording"/>
      <xs:enumeration value="Pause Recording"/>
      <xs:enumeration value="Resume Recording"/>
      <xs:enumeration value="Lock"/>
      <xs:enumeration value="Unlock"/>
      <xs:enumeration value="Call"/>
      <xs:enumeration value="Mute"/>
      <xs:enumeration value="Drop"/>
      <xs:enumeration value="Hold"/>
      <xs:enumeration value="Resume"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingCallId">
    <xs:annotation>
      <xs:documentation>
        Conference call Id.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
      <xs:maxLength value="70"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingConferenceId">
    <xs:annotation>
      <xs:documentation>
        Conference Id for a conference.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
      <xs:maxLength value="28"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:complexType name="InstantConferencingConferenceKey">
    <xs:annotation>
      <xs:documentation>
        Uniquely identifies a conference by the combination of bridge id and conference id within the bridge.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="bridgeServiceUserId" type="UserId"/>
      <xs:element name="conferenceId" type="InstantConferencingConferenceId"/>
    </xs:sequence>
  </xs:complexType>    
    
  <xs:simpleType name="InstantConferencingConferenceType">
    <xs:annotation>
      <xs:documentation>
        The type of conference.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="One Time"/>
      <xs:enumeration value="Recurring"/>
      <xs:enumeration value="Reservationless"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingDeviceDescription">
    <xs:annotation>
      <xs:documentation>
        Instant Conferencing device description.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
      <xs:maxLength value="80"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingDeviceUserName">
    <xs:annotation>
      <xs:documentation>
        Instant Conferencing device user name.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
      <xs:maxLength value="40"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingDocumentId">
    <xs:annotation>
      <xs:documentation>
        Uniquely identifies an instant conferencing document.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingExpiredConferenceHoldPeriodDays">
    <xs:annotation>
      <xs:documentation>
        Hold period for expired conferences, in days.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:enumeration value="1"/>
      <xs:enumeration value="2"/>
      <xs:enumeration value="3"/>
      <xs:enumeration value="4"/>
      <xs:enumeration value="5"/>
      <xs:enumeration value="6"/>
      <xs:enumeration value="7"/>
      <xs:enumeration value="15"/>
      <xs:enumeration value="30"/>
      <xs:enumeration value="60"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:complexType name="InstantConferencingIntegratedDevice">
    <xs:annotation>
      <xs:documentation>
        Integrated Instant Conferencing device settings.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="userName" type="InstantConferencingDeviceUserName"/>
      <xs:element name="password" type="Password"/>
      <xs:element name="secureProvisioning" type="xs:boolean" minOccurs="0"/>
      <xs:element name="unencryptedProvisioningPort" type="Port" minOccurs="0"/>
      <xs:element name="encryptedProvisioningPort" type="Port" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>    
    
  <xs:complexType name="InstantConferencingIntegratedDeviceModify">
    <xs:annotation>
      <xs:documentation>
        Integrated Instant Conferencing device settings.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="userName" type="InstantConferencingDeviceUserName" minOccurs="0"/>
      <xs:element name="password" type="Password" minOccurs="0"/>
      <xs:element name="secureProvisioning" type="xs:boolean" minOccurs="0"/>
      <xs:element name="unencryptedProvisioningPort" type="Port" minOccurs="0"/>
      <xs:element name="encryptedProvisioningPort" type="Port" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>    
    
  <xs:simpleType name="InstantConferencingLegId">
    <xs:annotation>
      <xs:documentation>
        Identifies a leg of a conference call.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:complexType name="InstantConferencingNonIntegratedDevice">
    <xs:annotation>
      <xs:documentation>
        Non-Integrated Instant Conferencing device settings.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="deviceType" type="AccessDeviceType"/>
    </xs:sequence>
  </xs:complexType>    
    
  <xs:simpleType name="InstantConferencingOutcallProfile">
    <xs:annotation>
      <xs:documentation>
        Profile used by an Instance Conferencing Instance.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Conference Bridge"/>
      <xs:enumeration value="User Placing Outcall"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingParticipantName">
    <xs:annotation>
      <xs:documentation>
        Conference leader or participant descriptive name.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
      <xs:maxLength value="80"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingPresentationPassword">
    <xs:annotation>
      <xs:documentation>
        Conference presentation password.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="62"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingPresentationPasswordHex">
    <xs:annotation>
      <xs:documentation>
        Conference presentation password in hexadecimal format.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
      <xs:maxLength value="248"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingRecordedConferenceHoldPeriodDays">
    <xs:annotation>
      <xs:documentation>
        Hold period for recorded conferences, in days.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:enumeration value="1"/>
      <xs:enumeration value="2"/>
      <xs:enumeration value="3"/>
      <xs:enumeration value="4"/>
      <xs:enumeration value="5"/>
      <xs:enumeration value="6"/>
      <xs:enumeration value="7"/>
      <xs:enumeration value="15"/>
      <xs:enumeration value="30"/>
      <xs:enumeration value="60"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingRecordingCallId">
    <xs:annotation>
      <xs:documentation>
        Conference recording call Id.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
      <xs:maxLength value="70"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingRecordingId">
    <xs:annotation>
      <xs:documentation>
        Id of instant conference recording.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
      <xs:maxLength value="28"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:complexType name="InstantConferencingRecordingKey">
    <xs:annotation>
      <xs:documentation>
        Identifier for conference recording.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="bridgeServiceUserId" type="UserId"/>
      <xs:element name="recordingId" type="InstantConferencingRecordingId"/>
    </xs:sequence>
  </xs:complexType>    
    
  <xs:simpleType name="InstantConferencingRecurrenceDayInterval">
    <xs:annotation>
      <xs:documentation>
        The recurrence interval for daily schedule.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="366"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingRecurrenceMonthInterval">
    <xs:annotation>
      <xs:documentation>
        The recurrence interval for monthly schedule.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="12"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingRecurrenceTimeFrame">
    <xs:annotation>
      <xs:documentation>
        The period of recurring conference.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Daily"/>
      <xs:enumeration value="Weekly"/>
      <xs:enumeration value="Monthly"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingRecurrenceWeekInterval">
    <xs:annotation>
      <xs:documentation>
        The recurrence interval for weekly schedule.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="53"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:complexType name="InstantConferencingRecurrenceSchedule" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Recurrence schedule used in the context of a conference add.
        This type is extended by:
          InstantConferencingRecurrenceScheduleDaily,
          InstantConferencingRecurrenceScheduleWeekly,
          InstantConferencingRecurrenceScheduleMonthly.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>    
    
  <xs:complexType name="InstantConferencingRecurrenceScheduleDaily">
    <xs:annotation>
      <xs:documentation>
        Daily recurrence conference schedule used in the context of a conference add.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="InstantConferencingRecurrenceSchedule">
        <xs:sequence>
          <xs:element name="recurrenceDayInterval" type="InstantConferencingRecurrenceDayInterval"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="InstantConferencingRecurrenceScheduleMonthly" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Monthly recurrence conference schedule used in the context of a conference add.
        This type is extended by:
          InstantConferencingRecurrenceScheduleMonthlyByDay,
          InstantConferencingRecurrenceScheduleMonthlyByWeek.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="InstantConferencingRecurrenceSchedule">
        <xs:sequence>
          <xs:element name="recurrenceMonthInterval" type="InstantConferencingRecurrenceMonthInterval"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="InstantConferencingRecurrenceScheduleMonthlyByDay">
    <xs:annotation>
      <xs:documentation>
        Monthly by day recurrence conference schedule used in the context of a conference add.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="InstantConferencingRecurrenceScheduleMonthly">
        <xs:sequence>
          <xs:element name="dayOfMonth" type="DayOfMonth"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="InstantConferencingRecurrenceScheduleMonthlyByWeek">
    <xs:annotation>
      <xs:documentation>
        Monthly by week recurrence conference schedule used in the context of a conference add.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="InstantConferencingRecurrenceScheduleMonthly">
        <xs:sequence>
          <xs:element name="weekOfMonth" type="InstantConferencingWeekOfMonth"/>
          <xs:element name="dayOfWeek" type="DayOfWeek"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="InstantConferencingRecurrenceScheduleWeekly">
    <xs:annotation>
      <xs:documentation>
        Weekly recurrence conference schedule used in the context of a conference add.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="InstantConferencingRecurrenceSchedule">
        <xs:sequence>
          <xs:element name="recurrenceWeekInterval" type="InstantConferencingRecurrenceWeekInterval"/>
          <xs:element name="dayOfWeek" type="DayOfWeek" minOccurs="0" maxOccurs="7"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="InstantConferencingSchedule" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Conference schedule used in the context of a conference add.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="startDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>    
    
  <xs:complexType name="InstantConferencingScheduleOneTime">
    <xs:annotation>
      <xs:documentation>
        One time conference schedule used in the context of a conference add.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="InstantConferencingSchedule">
        <xs:sequence>
          <xs:element name="startTime" type="xs:time"/>
          <xs:element name="duration" type="xs:duration"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="InstantConferencingScheduleRecurring">
    <xs:annotation>
      <xs:documentation>
        Recurring conference schedule used in the context of a conference add.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="InstantConferencingSchedule">
        <xs:sequence>
          <xs:element name="startTime" type="xs:time"/>
          <xs:element name="duration" type="xs:duration"/>
          <xs:element name="recurrenceTimeFrame" type="InstantConferencingRecurrenceTimeFrame"/>
          <xs:element name="recurrenceSchedule" type="InstantConferencingRecurrenceSchedule"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:complexType name="InstantConferencingScheduleReservationless">
    <xs:annotation>
      <xs:documentation>
        Reservationless conference schedule used in the context of a conference add.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="InstantConferencingSchedule">
        <xs:sequence>
          <xs:element name="endDate" type="xs:date"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>    
    
  <xs:simpleType name="InstantConferencingSlideName">
    <xs:annotation>
      <xs:documentation>
        Conference slide name.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingSlideNumber">
    <xs:annotation>
      <xs:documentation>
        Conference document slide number.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="1"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingSlideShowPassword">
    <xs:annotation>
      <xs:documentation>
        Conference slide show password.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="62"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingSlideShowPasswordHex">
    <xs:annotation>
      <xs:documentation>
        Conference slide show password in hexadecimal format.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
      <xs:maxLength value="248"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingStandAloneCallControlAction">
    <xs:annotation>
      <xs:documentation>
        The conference call control action for stand alone user.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Join"/>
      <xs:enumeration value="Call"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingTitle">
    <xs:annotation>
      <xs:documentation>
        Title of instant conference.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1"/>
      <xs:maxLength value="324"/>
    </xs:restriction>
  </xs:simpleType>    
    
  <xs:simpleType name="InstantConferencingWeekOfMonth">
    <xs:annotation>
      <xs:documentation>
        Week of the month.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="1"/>
      <xs:enumeration value="2"/>
      <xs:enumeration value="3"/>
      <xs:enumeration value="4"/>
      <xs:enumeration value="Last"/>
    </xs:restriction>
  </xs:simpleType>    
    
</xs:schema>
